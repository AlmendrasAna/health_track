name: CI Pipeline - Maven + Selenium + JMeter + SonarQube

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v4

      - name: Configurar Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Instalar Mozilla Firefox
        run: |
          sudo apt-get update
          sudo apt-get install -y firefox

      - name: Cachear dependencias Maven
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Compilar con Maven
        run: mvn clean install -DskipTests
        working-directory: monitoreo-peso

      - name: Construir y ejecutar pruebas
        working-directory: monitoreo-peso
        run: mvn clean test

      - name: Ejecutar pruebas Selenium
        working-directory: monitoreo-peso
        run: mvn test

      - name: Instalar JMeter
        working-directory: monitoreo-peso
        run: |
          wget https://downloads.apache.org//jmeter/binaries/apache-jmeter-5.6.3.tgz
          tar -xzf apache-jmeter-5.6.3.tgz
          export PATH=$PATH:$PWD/apache-jmeter-5.6.3/bin

      - name: Ejecutar pruebas de rendimiento con JMeter
        working-directory: monitoreo-peso
        run: |
          mvn verify 
      - name: Publicar reporte de JMeter
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: reporte-jmeter
          path: monitoreo-peso/target/reporte/

      - name: Subir reportes de pruebas (Surefire)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: monitoreo-peso/target/surefire-reports/
      
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: SonarQube Scan 1
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_1 }}  # analysis token associated to your project
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
            cd PROJECT1_PATH/
            mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=SONAR_PROJECT1_KEY -Dsonar.projectName='SONAR_PROJECT1_NAME' 
        # Replace variables with project path, key and name

